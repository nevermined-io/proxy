# Load the imfile input module
module(load="imfile") # Load the imfile input module
 
input(type="imfile"
      File="/var/log/nginx/upstream.log"
      Tag="upstream:")
 
# Load the ompgsql output module
module(load="ompgsql")
 
# Define a template for row insertion of your data.
# The template below assumes you have a table called
# "access_log" and are inserting columns named 
# "log_line" (with the log payload) and "created_at" (with the timestamp).
template(name="sql-syslog" type="list" option.sql="on") {
  # THIS ONE WORKS 
  #constant(value="INSERT INTO public.\"serviceLogsQueue\" (\"logId\", \"logLine\", \"status\", \"retried\", \"errorMessage\", \"createdAt\", \"updatedAt\") values (uuid_generate_v4(), '{}','Pending', 0, '', now(), now() )")

  constant(value="INSERT INTO public.\"serviceLogsQueue\" (\"logId\", \"logLine\", \"status\", \"retried\", \"errorMessage\", \"createdAt\", \"updatedAt\") values (uuid_generate_v4(), ")
  constant(value=" '")
  property(name="msg")
  constant(value="' ")
  constant(value=", 'Pending', 0, '', now(), now() ) ")  
  #property(name="timereported" dateformat="pgsql" date.inUTC="on")

}      
 
# The output "action". This line instructs rsyslog
# to check if the log line is tagged "yoursite:" (a tag
# which we set with the imfile module configuration above)
# and if so to use the sql-syslog template we defined
# above to insert it into Postgres.
if( $syslogtag == 'upstream:')  then {
  action(type="ompgsql" server="localhost"
        user="postgres" 
        pass="secret"
        db="nvm_one"
        template="sql-syslog"
        queue.type="Direct")
}
