
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

load_module modules/ngx_http_js_module.so;
load_module modules/ngx_stream_js_module.so;
#load_module modules/ngx_http_perl_module.so;

env INTROSPECTION_URL;

events {
    worker_connections  1024;
}


http {

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    # It allows to log the result of the request to upstream in JSON format.
    log_format  upstream '{"time_local": "$time_local", '
        '"path": "$request_uri", '   # probably remove
        '"time": "$time_iso8601", '
        '"request": "$request", ' # probably remove
        '"status": "$status", '
        '"upstream_status": "$upstream_status", '
        '"upstream_addr": "$upstream_addr", '
        '"upstream_response_time": "$upstream_response_time", '
        '"upstream_http_NVMCreditsConsumed": "$upstream_http_NVMCreditsConsumed", '
        #'"endpoint": "$_protocol://$upstream_host$uri", '
        '"endpoint": "$_protocol://$proxy_host$uri", '
        '"scope": "$scope", '
        '"user_id": "$user_id", '
        '"request_time": "$request_time" }';


    sendfile        on;

    keepalive_timeout  65;

    #perl_set $env_introspection_url 'sub { return $ENV{"INTROSPECTION_URL"}; }';

    include /etc/nginx/sites-enabled/*;
}


